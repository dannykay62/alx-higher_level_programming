# 0-add_integer.txt

===============================
How to use 0-add_integer.txt
===============================

Module defines integer addition function ``add_integer(a, b=98)``.

Usage
======

``add_integer(...)``` returns the result of adding its two supplied arguments. With numbers, it is equivalent to the + operator.

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 3)
	5


::


	>>> add_integer(2, -3)
	-1

This function works with floating point values too.

::

	>>> add_integer(2.0, 3.0)
	5

Notice floats are casted to int prior to addition.

::

	>>> add_integer(2.9, 0.2)
	2

::

	>>> add_integer(-2.9, -0.2)
	-2

Floating point values can be combined withnon-floating point values.

::

	>>> add_integer(2.3, -3)
	-1

The default value for the second argument is 98, so it is optional.

::

	>>> add_integer(2)
	100

Non-Numbers
============

``add_integer()`` assumes both arguments are floats or integers.
It raise a TypeError if either of the arguments is non-float or non-integer:

::

	>>> add_integer("hello", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_=integer(2, "hello")
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2.3, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

Whenever the two arguments are non-floats or non-integers a TypeError is printed for only the first argument.

::

	>>> add_integer("hello", "there")
	Traceback (most recent call last):
	TypeError: a must be an integer

The function fails whenever infinty is supplied as argument.

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to an integer

::

	>>> add_integer(2, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinty to integer

With NaN number.

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot coonvert float NaN to integer

::

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
